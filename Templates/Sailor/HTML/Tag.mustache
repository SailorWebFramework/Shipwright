// This file was autogenerated by Shipwright. DO NOT CHANGE.
//
//  {{ctag}}.swift
//
//  Created by Joshua Davis.
//

import Sailboat

/// {{description}}
public struct {{ctag}}: Element {
    public struct ElementAttributeGroup: AttributeGroup, GlobalAttributeGroup {
        public let name: String
        public let value: String
        
        public init(name: String, value: String) {
            self.name = name
            self.value = value
        }

        {{#attributes}}
        ///{{description}}
        {{#isWildCard}}
        static func {{alias}}(_ name: String, _ value: {{type}}) -> Self {
            .init(name: "{{name}}-\(name)", value: value.description)
        }
        {{/isWildCard}}
        {{^isWildCard}}
        static func {{alias}}(_ value: {{type}}) -> Self {
            {{#isStyle}}
            .init(name: "{{name}}", value: Style(value).description)
            {{/isStyle}}
            {{^isStyle}}
            {{#isSequence}}
            .init(name: "{{name}}", value: value.map{ $0.description }.joined(separator: " "))
            {{/isSequence}}
            {{^isSequence}}
            {{#isMappedBool}}
            .init(name: "{{name}}", value: value ? "true" : "false")
            {{/isMappedBool}}
            {{^isMappedBool}}
            .init(name: "{{name}}", value: value.description)
            {{/isMappedBool}}
            {{/isSequence}}
            {{/isStyle}}
        }
        {{/isWildCard}}

        {{/attributes}}
    }

    /// name of the html tag associated with this type
    public var name: String { "{{tag}}" }

    /// attributes associated with this type
    public var attributes: [String: String]

    /// events associated with this type
    public var events: Events

    /// content that is contained by this html element
    public var content: TagContent

    public init() {   
        self.init("")       
    }

    public init(_ attributes: ElementAttributeGroup..., @PageBuilder content: @escaping () -> any Operator) {
        self.content = .list(content)
        self.attributes = .init()
        
        for attribute in attributes {
            self.attributes[attribute.name] = attribute.value
        }
        
        self.events = [:]

    }
    
    public init(_ text: String) {
        self.content = .text(text)
        self.attributes = .init()
        self.events = [:]
    }

}

// MARK: - Attributes
public extension {{ctag}} {
    {{#attributes}}
    ///{{description}}
    {{#isWildCard}}
    func {{alias}}(_ name: String, _ value: {{type}}) -> Self {
        attribute(ElementAttributeGroup(name: "{{name}}-name", value: value.description))
    }
    {{/isWildCard}}
    {{^isWildCard}}
    func {{alias}}(_ value: {{type}}) -> Self {
        attribute(ElementAttributeGroup(name: "{{name}}", value: value.description))
    }
    {{/isWildCard}}

    {{/attributes}}
}